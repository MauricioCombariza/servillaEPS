# docker-compose.yml
# Archivo de ejemplo para una configuración tipo producción.

version: '3.8' # La advertencia sobre 'version' es normal, podemos ignorarla.

services:
  # En producción, la base de datos debería ser un servicio gestionado.
  db:
    image: postgres:15-alpine
    container_name: farmacia_db_prod
    # En un despliegue real, las variables se inyectarían de forma segura,
    # no desde un archivo local. Por eso eliminamos 'env_file'.
    # environment:
    #   - POSTGRES_USER=${POSTGRES_USER}
    # ... etc
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    networks:
      - farmacia_net_prod

  # Servicio del Backend FastAPI para producción
  backend:
    container_name: farmacia_backend_prod
    build:
      context: ./backend
      dockerfile: Dockerfile 
    
    volumes:
      - uploaded_files_prod:/app/uploads

    # En un despliegue real, estas variables las provee la plataforma (Render).
    # Eliminamos 'env_file' para evitar la advertencia.
    
    depends_on:
      - db
    networks:
      - farmacia_net_prod

volumes:
  postgres_data_prod:
  uploaded_files_prod:

networks:
  farmacia_net_prod:
    driver: bridge